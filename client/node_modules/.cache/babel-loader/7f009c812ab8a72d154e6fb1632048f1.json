{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kylen\\\\Desktop\\\\ecommerce\\\\src\\\\pages\\\\shop\\\\Shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils.js\";\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/Users/kylen/Desktop/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","Route","connect","firestore","convertCollectionsSnapshotToMap","updateCollections","ShopPage","Component","state","loading","unsubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","get","then","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,kCAHP;AAKA,SAASC,iBAAT,QAAkC,+BAAlC;;AAEA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCC,KADqC,GAC7B;AACNC,MAAAA,OAAO,EAAE;AADH,KAD6B;AAAA,SAKrCC,uBALqC,GAKX,IALW;AAAA;;AAOrCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEN,MAAAA;AAAF,QAAwB,KAAKO,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGd,+BAA+B,CAACa,QAAD,CAAtD;AACAZ,MAAAA,iBAAiB,CAACa,cAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKb,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEa,KAAK,CAACC,IAAK,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACC,IAAK,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AA1BoC;;AA6BvC,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,iBAAiB,EAAGa,cAAD,IACjBM,QAAQ,CAACnB,iBAAiB,CAACa,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils.js\";\r\n\r\nimport { updateCollections } from \"../../redux/shop/shop.actions\";\r\n\r\nclass ShopPage extends React.Component {\r\n  state = {\r\n    loading: true,\r\n  };\r\n\r\n  unsubscribeFromSnapshot = null;\r\n\r\n  componentDidMount() {\r\n    const { updateCollections } = this.props;\r\n    const collectionRef = firestore.collection(\"collections\");\r\n\r\n    collectionRef.get().then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      updateCollections(collectionsMap);\r\n      this.setState({ loading: false });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.state;\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route exact path={`${match.path}`} />\r\n        <Route path={`${match.path}/:collectionId`} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateCollections: (collectionsMap) =>\r\n    dispatch(updateCollections(collectionsMap)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}