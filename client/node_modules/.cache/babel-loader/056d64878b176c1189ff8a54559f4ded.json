{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kylen\\\\Desktop\\\\ecommerce\\\\src\\\\components\\\\sign-in\\\\SignIn.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"../button/Button\";\nimport FormInput from \"../form-input/FormInput\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport \"./SignIn.scss\";\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        emailSignInStart\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      emailSignInStart(email, password);\n    };\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      label: \"email\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"Sign in with Google\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/kylen/Desktop/ecommerce/src/components/sign-in/SignIn.jsx"],"names":["React","Component","connect","Button","FormInput","googleSignInStart","emailSignInStart","SignIn","state","email","password","handleSubmit","event","preventDefault","props","handleChange","value","name","target","setState","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Button from \"../button/Button\";\r\nimport FormInput from \"../form-input/FormInput\";\r\n\r\nimport {\r\n  googleSignInStart,\r\n  emailSignInStart,\r\n} from \"../../redux/user/user.actions\";\r\n\r\nimport \"./SignIn.scss\";\r\n\r\nclass SignIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const { emailSignInStart } = this.props;\r\n    const { email, password } = this.state;\r\n\r\n    emailSignInStart(email, password);\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { value, name } = event.target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { googleSignInStart } = this.props;\r\n    return (\r\n      <div className=\"sign-in\">\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n\r\n        <form onSubmit={this.handleSubmit}>\r\n          <FormInput\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={this.state.email}\r\n            handleChange={this.handleChange}\r\n            label=\"email\"\r\n            required\r\n          />\r\n\r\n          <FormInput\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            handleChange={this.handleChange}\r\n            label=\"password\"\r\n            required\r\n          />\r\n          <div className=\"buttons\">\r\n            <Button type=\"submit \">Sign in</Button>\r\n            <Button type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\r\n              Sign in with Google\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  googleSignInStart: () => dispatch(googleSignInStart()),\r\n  emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}