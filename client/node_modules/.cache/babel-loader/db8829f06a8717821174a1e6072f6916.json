{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kylen\\\\Desktop\\\\ecommerce\\\\src\\\\pages\\\\shop\\\\Shop.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../../components/with-spinner/WithSpinner\";\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\nimport CollectionsPage from \"../collections/Collections\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\n\nclass Shop extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isColectionsLoaded: selectIsCollectionsLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["C:/Users/kylen/Desktop/ecommerce/src/pages/shop/Shop.jsx"],"names":["React","Route","createStructuredSelector","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","WithSpinner","CollectionsOverview","CollectionsPage","CollectionsOverviewWithSpinner","CollectionsPageWithSpinner","Shop","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","isColectionsLoaded","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,iCAHP;AAKA,OAAOC,WAAP,MAAwB,2CAAxB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AAEA,MAAMC,8BAA8B,GAAGH,WAAW,CAACC,mBAAD,CAAlD;AACA,MAAMG,0BAA0B,GAAGJ,WAAW,CAACE,eAAD,CAA9C;;AAEA,MAAMG,IAAN,SAAmBZ,KAAK,CAACa,SAAzB,CAAmC;AACjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEV,MAAAA;AAAF,QAAiC,KAAKW,KAA5C;AACAX,IAAAA,0BAA0B;AAC3B;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,8BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,0BAAD;AACE,QAAA,SAAS,EAAEG;AADb,SAEMH,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF;AAuBD;;AAhCgC;;AAmCnC,MAAMK,eAAe,GAAGlB,wBAAwB,CAAC;AAC/CgB,EAAAA,oBAAoB,EAAEb,0BADyB;AAE/CgB,EAAAA,kBAAkB,EAAEf;AAF2B,CAAD,CAAhD;;AAKA,MAAMgB,kBAAkB,GAAIC,QAAD,KAAe;AACxCnB,EAAAA,0BAA0B,EAAE,MAAMmB,QAAQ,CAACnB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,eAAeD,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CV,IAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { createStructuredSelector } from \"reselect\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop/shop.actions\";\r\nimport {\r\n  selectIsCollectionFetching,\r\n  selectIsCollectionsLoaded,\r\n} from \"../../redux/shop/shop.selectors\";\r\n\r\nimport WithSpinner from \"../../components/with-spinner/WithSpinner\";\r\nimport CollectionsOverview from \"../../components/collections-overview/CollectionsOverview\";\r\nimport CollectionsPage from \"../collections/Collections\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\r\nconst CollectionsPageWithSpinner = WithSpinner(CollectionsPage);\r\n\r\nclass Shop extends React.Component {\r\n  componentDidMount() {\r\n    const { fetchCollectionsStartAsync } = this.props;\r\n    fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isCollectionFetching } = this.props;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            <CollectionsOverviewWithSpinner\r\n              isLoading={isCollectionFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionsPageWithSpinner\r\n              isLoading={isCollectionFetching}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n  isCollectionFetching: selectIsCollectionFetching,\r\n  isColectionsLoaded: selectIsCollectionsLoaded,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}